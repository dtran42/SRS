@model IEnumerable<RequestViewModel>
@{
    ViewData["Title"] = "Dashboard";
}

<section class="dashboard">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div id="mainBox" class="card card-lightblue">
                    <div class="card-header">
                        <h3 class="card-title">Requests Ready For My Action</h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool dashboard-box-btn" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
                        </div>
                    </div>
                    <div class="card-body">
                        <table id="woRequests" class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>WO Number</th>
                                    <th>WO Title</th>
                                    <th>WO Status</th>
                                    <th>Request Priority</th>
                                    <th>Created By</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var request in Model)
                                {
                                    <tr>
                                        <td><a asp-action="Detail" asp-route-id="@request.Id">@request.Id</a></td>
                                        <td>@request.WOTitle</td>
                                        <td>@request.WOStatus</td>
                                        <td>@request.RequestPriority.GetDescription()</td>
                                        <td>@request.CreatedBy</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div id="requestsBox" class="card card-gray">
                    <div class="card-header">
                        <h3 class="card-title">Request List</h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool dashboard-box-btn" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
                        </div>
                    </div>
                    <div class="card-body">
                        Please <a href="#">edit</a> the preferences for this portlet
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div id="barChartBox" class="card card-gray-dark">
                    <div class="card-header">
                        <h3 class="card-title">Request Summary Bar Chart</h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool dashboard-box-btn" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="chart">
                            <canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div id="pieChartBox" class="card card-navy">
                    <div class="card-header">
                        <h3 class="card-title">Request Pie Chart</h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool dashboard-box-btn" data-card-widget="collapse"><i class="fas fa-minus"></i></button>
                        </div>
                    </div>
                    <div class="card-body">
                        <canvas id="pieChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts{
    <script>
        $(document).ready(function () {
            $('#woRequests').DataTable({
                "paging": true,
                "pageLength": 5,
                "lengthChange": false,
                "searching": false,
                "ordering": true,
                "order": [[0, "desc"]],
                "info": true,
                "autoWidth": false,
                "responsive": true,
            });

            var pieData = {
                labels: [
                    'Chrome',
                    'IE',
                    'FireFox',
                    'Safari',
                    'Opera',
                    'Navigator',
                ],
                datasets: [
                    {
                        data: [700, 500, 400, 600, 300, 100],
                        backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#d2d6de'],
                    }
                ]
            };
            var pieChartCanvas = $('#pieChart').get(0).getContext('2d');
            var pieOptions = {
                maintainAspectRatio: false,
                responsive: true,
            };
            //Create pie or douhnut chart
            // You can switch between pie and douhnut using the method below.
            var pieChart = new Chart(pieChartCanvas, {
                type: 'pie',
                data: pieData,
                options: pieOptions
            });


            var areaChartData = {
                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
                datasets: [
                    {
                        label: 'Digital Goods',
                        backgroundColor: 'rgba(60,141,188,0.9)',
                        borderColor: 'rgba(60,141,188,0.8)',
                        pointRadius: false,
                        pointColor: '#3b8bba',
                        pointStrokeColor: 'rgba(60,141,188,1)',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(60,141,188,1)',
                        data: [28, 48, 40, 19, 86, 27, 90]
                    },
                    {
                        label: 'Electronics',
                        backgroundColor: 'rgba(210, 214, 222, 1)',
                        borderColor: 'rgba(210, 214, 222, 1)',
                        pointRadius: false,
                        pointColor: 'rgba(210, 214, 222, 1)',
                        pointStrokeColor: '#c1c7d1',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(220,220,220,1)',
                        data: [65, 59, 80, 81, 56, 55, 40]
                    },
                ]
            };

            var barChartCanvas = $('#barChart').get(0).getContext('2d');
            var barChartData = jQuery.extend(true, {}, areaChartData);
            var temp0 = areaChartData.datasets[0];
            var temp1 = areaChartData.datasets[1];
            barChartData.datasets[0] = temp1;
            barChartData.datasets[1] = temp0;

            var barChartOptions = {
                responsive: true,
                maintainAspectRatio: false,
                datasetFill: false
            };

            var barChart = new Chart(barChartCanvas, {
                type: 'bar',
                data: barChartData,
                options: barChartOptions
            });

            //remember collapse/expand state
            var defaultStates = [
                { id: 'mainBox', isCollapsed: false },
                { id: 'requestsBox', isCollapsed: false },
                { id: 'barChartBox', isCollapsed: false },
                { id: 'pieChartBox', isCollapsed: false }
            ];
            const defaultCollapse = 'collapsed-card';
            var boxesStates = getLocalStorage('DashboardStates');
            if (boxesStates === null || boxesStates === undefined) {
                setLocalStoreage('DashboardStates', defaultStates);
                boxesStates = defaultStates
            }

            updateDashboardState(boxesStates);

            function updateDashboardState(states) {
                states.forEach(function (state) {
                    if (state.isCollapsed) {
                        if (!$('#' + state.id).hasClass(defaultCollapse)) {
                            $('#' + state.id).find('button.dashboard-box-btn').click();
                        }
                    }
                });
            }

            //update localState when click collapse/expand
            $('.dashboard-box-btn').on('click', function () {
                var self = this;
                setTimeout(function () {
                    var parent = $(self).parent().parent().parent();
                    console.log(parent);
                    var id = parent[0].id;
                    var states = getLocalStorage('DashboardStates');
                    var objIndex = states.findIndex((obj => obj.id == id));

                    if (parent.hasClass(defaultCollapse)) {
                        states[objIndex].isCollapsed = true;
                    }
                    else {
                        states[objIndex].isCollapsed = false;
                    }

                    setLocalStoreage('DashboardStates', states);

                }, 1000); //
                
            })

            function getLocalStorage(key) {
                return JSON.parse(localStorage.getItem(key));
            }
            function setLocalStoreage(key, value) {
                localStorage.setItem(key, JSON.stringify(value));
            }
        });
    </script>
}
